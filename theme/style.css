/*! tailwindcss v4.0.14 | MIT License | https://tailwindcss.com */
/*!
Theme Name: arinsa
Theme URI: https://gorilabs.com
Author: GORILABS
Author URI: https://underscoretw.com/
Description: Hecho especialmente para ARINSA.
Version: 0.1.0
Tested up to: 6.2
Requires PHP: 7.4
License: GNU General Public License v2 or later
License URI: LICENSE
Text Domain: arinsa
Tags:

This theme, like WordPress, is licensed under the GPL.
Use it to make something cool, have fun, and share what you've learned.

arinsa is based on _tw https://underscoretw.com/, (C) 2021-2025 Greg Sullivan
_tw is distributed under the terms of the GNU GPL v2 or later.

_tw is based on Underscores https://underscores.me/ and Varia https://github.com/Automattic/themes/tree/master/varia, (C) 2012-2025 Automattic, Inc.
Underscores and Varia are distributed under the terms of the GNU GPL v2 or later.
*/
:root, :host {
  --font-sans: "Poppins", "sans-serif";
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
		"Liberation Mono", "Courier New", monospace;
  --color-red-500: oklch(0.637 0.237 25.331);
  --color-yellow-500: oklch(0.795 0.184 86.047);
  --color-yellow-600: oklch(0.681 0.162 75.834);
  --color-green-500: oklch(0.723 0.219 149.579);
  --color-blue-500: oklch(0.623 0.214 259.815);
  --color-gray-100: oklch(0.967 0.003 264.542);
  --color-gray-200: oklch(0.928 0.006 264.531);
  --color-gray-500: oklch(0.551 0.027 264.364);
  --color-gray-600: oklch(0.446 0.03 256.802);
  --color-gray-900: oklch(0.21 0.034 264.665);
  --color-neutral-900: oklch(0.205 0 0);
  --color-black: #000;
  --color-white: #fff;
  --spacing: 0.25rem;
  --container-7xl: 80rem;
  --text-xs: 0.75rem;
  --text-xs--line-height: calc(1 / 0.75);
  --text-sm: 0.875rem;
  --text-sm--line-height: calc(1.25 / 0.875);
  --text-base: 1rem;
  --text-base--line-height: calc(1.5 / 1);
  --text-lg: 1.125rem;
  --text-lg--line-height: calc(1.75 / 1.125);
  --text-xl: 1.25rem;
  --text-xl--line-height: calc(1.75 / 1.25);
  --text-2xl: 1.5rem;
  --text-2xl--line-height: calc(2 / 1.5);
  --text-3xl: 1.875rem;
  --text-3xl--line-height: calc(2.25 / 1.875);
  --text-4xl: 2.25rem;
  --text-4xl--line-height: calc(2.5 / 2.25);
  --text-5xl: 3rem;
  --text-5xl--line-height: 1;
  --font-weight-normal: 400;
  --font-weight-medium: 500;
  --font-weight-semibold: 600;
  --font-weight-bold: 700;
  --font-weight-extrabold: 800;
  --tracking-wider: 0.05em;
  --tracking-widest: 0.1em;
  --leading-tight: 1.25;
  --leading-relaxed: 1.625;
  --radius-md: 0.375rem;
  --radius-lg: 0.5rem;
  --radius-xl: 0.75rem;
  --radius-3xl: 1.5rem;
  --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
  --aspect-video: 16 / 9;
  --default-transition-duration: 150ms;
  --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  --default-font-family: var(--font-sans);
  --default-font-feature-settings: var(--font-sans--font-feature-settings);
  --default-font-variation-settings: var(--font-sans--font-variation-settings);
  --default-mono-font-family: var(--font-mono);
  --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
  --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
  --color-background: var(--wp--preset--color--background);
  --color-foreground: var(--wp--preset--color--foreground);
  --color-primary: var(--wp--preset--color--primary);
  --container-content: var(--wp--style--global--content-size);
  --container-wide: var(--wp--style--global--wide-size);
}
@font-face {
  font-family: "Poppins";
  src: url("fonts/Poppins-Regular.ttf") format("truetype");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Poppins";
  src: url("fonts/Poppins-Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
*, ::after, ::before, ::backdrop, ::file-selector-button {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: 0 solid;
}
html, :host {
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
  tab-size: 4;
  font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji' );
  font-feature-settings: var(--default-font-feature-settings, normal);
  font-variation-settings: var(--default-font-variation-settings, normal);
  -webkit-tap-highlight-color: transparent;
}
body {
  line-height: inherit;
}
hr {
  height: 0;
  color: inherit;
  border-top-width: 1px;
}
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}
h1, h2, h3, h4, h5, h6 {
  font-size: inherit;
  font-weight: inherit;
}
a {
  color: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}
b, strong {
  font-weight: bolder;
}
code, kbd, samp, pre {
  font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace );
  font-feature-settings: var(--default-mono-font-feature-settings, normal);
  font-variation-settings: var(--default-mono-font-variation-settings, normal);
  font-size: 1em;
}
small {
  font-size: 80%;
}
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}
:-moz-focusring {
  outline: auto;
}
progress {
  vertical-align: baseline;
}
summary {
  display: list-item;
}
ol, ul, menu {
  list-style: none;
}
img, svg, video, canvas, audio, iframe, embed, object {
  display: block;
  vertical-align: middle;
}
img, video {
  max-width: 100%;
  height: auto;
}
button, input, select, optgroup, textarea, ::file-selector-button {
  font: inherit;
  font-feature-settings: inherit;
  font-variation-settings: inherit;
  letter-spacing: inherit;
  color: inherit;
  border-radius: 0;
  background-color: transparent;
  opacity: 1;
}
:where(select:is([multiple], [size])) optgroup {
  font-weight: bolder;
}
:where(select:is([multiple], [size])) optgroup option {
  padding-inline-start: 20px;
}
::file-selector-button {
  margin-inline-end: 4px;
}
::placeholder {
  opacity: 1;
  color: color-mix(in oklab, currentColor 50%, transparent);
}
textarea {
  resize: vertical;
}
::-webkit-search-decoration {
  -webkit-appearance: none;
}
::-webkit-date-and-time-value {
  min-height: 1lh;
  text-align: inherit;
}
::-webkit-datetime-edit {
  display: inline-flex;
}
::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}
::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
  padding-block: 0;
}
:-moz-ui-invalid {
  box-shadow: none;
}
button, input:where([type='button'], [type='reset'], [type='submit']), ::file-selector-button {
  appearance: button;
}
::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
  height: auto;
}
[hidden]:where(:not([hidden='until-found'])) {
  display: none !important;
}
body {
  background-color: var(--color-background);
  font-family: var(--font-sans);
  color: var(--color-foreground);
}
.desktop .container {
  max-width: calc(100% - 30%) !important;
}
.mobile .container {
  max-width: calc(100% - 10%) !important;
}
.overlay {
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0,.25);
  position: absolute;
  left: 0;
  top: 0;
}
p {
  margin-bottom: 1.5rem;
}
ul {
  list-style: disc;
  padding-left: 1.5rem;
  margin-bottom: 1.5rem;
}
ol {
  list-style: numeric;
  padding-left: 1.5rem;
  margin-bottom: 1.5rem;
}
.youtube iframe {
  width: 100%;
  height: auto;
  aspect-ratio: 16/9;
}
.swiper-button-next::after, .swiper-button-prev::after {
  font-family: swiper-icons;
  font-size: var(--swiper-navigation-size);
  text-transform: none !important;
  letter-spacing: 0;
  font-variant: initial;
  line-height: 1;
  filter: grayscale(10) invert(1);
}
.menu-item-object-proyecto {
  position: relative;
}
.menu-item-object-proyecto a::before {
  content: attr(data-status);
  font-size: .6rem;
  border: none;
  letter-spacing: 1px;
  padding: 0 .75em;
  margin-left: 1.5em;
  border-radius: 0;
  background-color: var(--azul-arinsa);
  color: var(--color-yellow-600);
  position: absolute;
  left: -4px;
  top: -8px;
}
.page-title, .entry-title {
  margin-inline: auto;
  margin-bottom: calc(var(--spacing) * 6);
  max-width: var(--container-content);
  font-size: var(--text-3xl);
  line-height: var(--tw-leading, var(--text-3xl--line-height));
  --tw-font-weight: var(--font-weight-extrabold);
  font-weight: var(--font-weight-extrabold);
  color: var(--color-neutral-900);
}
.page-content > *, .entry-content > * {
  margin-inline: auto;
  max-width: var(--container-content);
}
.entry-content > .alignwide {
  max-width: var(--container-wide);
}
.entry-content > .alignfull {
  max-width: none;
}
.entry-content > .alignleft {
  float: left;
  margin-right: calc(var(--spacing) * 8);
}
.entry-content > .alignright {
  float: right;
  margin-left: calc(var(--spacing) * 8);
}
.pointer-events-none {
  pointer-events: none;
}
.collapse {
  visibility: collapse;
}
.invisible {
  visibility: hidden;
}
.visible {
  visibility: visible;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.top-0 {
  top: calc(var(--spacing) * 0);
}
.top-1\/2 {
  top: calc(1/2 * 100%);
}
.top-full {
  top: 100%;
}
.right-0 {
  right: calc(var(--spacing) * 0);
}
.right-\[-240px\] {
  right: -240px;
}
.bottom-0 {
  bottom: calc(var(--spacing) * 0);
}
.left-0 {
  left: calc(var(--spacing) * 0);
}
.left-5 {
  left: calc(var(--spacing) * 5);
}
.left-full {
  left: 100%;
}
.z-1 {
  z-index: 1;
}
.z-50 {
  z-index: 50;
}
.col-span-3 {
  grid-column: span 3 / span 3;
}
.col-span-7 {
  grid-column: span 7 / span 7;
}
.container {
  width: 100%;
}
@media (width >= 40rem) {
  .container {
    max-width: 40rem;
  }
}
@media (width >= 48rem) {
  .container {
    max-width: 48rem;
  }
}
@media (width >= 64rem) {
  .container {
    max-width: 64rem;
  }
}
@media (width >= 80rem) {
  .container {
    max-width: 80rem;
  }
}
@media (width >= 96rem) {
  .container {
    max-width: 96rem;
  }
}
.m-0 {
  margin: calc(var(--spacing) * 0);
}
.mx-auto {
  margin-inline: auto;
}
.my-0 {
  margin-block: calc(var(--spacing) * 0);
}
.my-1 {
  margin-block: calc(var(--spacing) * 1);
}
.my-2 {
  margin-block: calc(var(--spacing) * 2);
}
.my-3 {
  margin-block: calc(var(--spacing) * 3);
}
.my-4 {
  margin-block: calc(var(--spacing) * 4);
}
.my-5 {
  margin-block: calc(var(--spacing) * 5);
}
.my-10 {
  margin-block: calc(var(--spacing) * 10);
}
.ms-2\.5 {
  margin-inline-start: calc(var(--spacing) * 2.5);
}
.prose {
  color: var(--tw-prose-body);
  max-width: none;
}
.prose :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where([class~="lead"],[class~="is-style-lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}
.prose :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}
.prose :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.prose :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.prose :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.prose :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.prose :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.prose :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.prose :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.prose :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
}
.prose :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}
.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}
.prose :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}
.prose :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1;
  margin-top: 3em;
  margin-bottom: 3em;
  border-bottom: none;
}
.prose :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-inline-start-width: 0.25rem;
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1em;
  border-left-style: solid;
}
.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: open-quote;
}
.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: close-quote;
}
.prose :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.prose :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}
.prose :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.prose :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}
.prose :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.prose :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.prose :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-inline-start: 0.375em;
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: "`";
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: "`";
}
.prose :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}
.prose :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}
.prose :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-inline-start: 1.1428571em;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: none;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: none;
}
.prose :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}
.prose :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.prose :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}
.prose :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 0;
}
.prose :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: baseline;
}
.prose :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}
.prose :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: top;
}
.prose :where(th,td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  text-align: start;
}
.prose :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.prose {
  --tw-prose-body: oklch(0.373 0.034 259.733);
  --tw-prose-headings: oklch(0.21 0.034 264.665);
  --tw-prose-lead: oklch(0.446 0.03 256.802);
  --tw-prose-links: oklch(0.21 0.034 264.665);
  --tw-prose-bold: oklch(0.21 0.034 264.665);
  --tw-prose-counters: oklch(0.551 0.027 264.364);
  --tw-prose-bullets: oklch(0.872 0.01 258.338);
  --tw-prose-hr: oklch(0.928 0.006 264.531);
  --tw-prose-quotes: oklch(0.21 0.034 264.665);
  --tw-prose-quote-borders: oklch(0.928 0.006 264.531);
  --tw-prose-captions: oklch(0.551 0.027 264.364);
  --tw-prose-kbd: oklch(0.21 0.034 264.665);
  --tw-prose-kbd-shadows: NaN NaN NaN;
  --tw-prose-code: oklch(0.21 0.034 264.665);
  --tw-prose-pre-code: oklch(0.928 0.006 264.531);
  --tw-prose-pre-bg: oklch(0.278 0.033 256.848);
  --tw-prose-th-borders: oklch(0.872 0.01 258.338);
  --tw-prose-td-borders: oklch(0.928 0.006 264.531);
  --tw-prose-invert-body: oklch(0.872 0.01 258.338);
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: oklch(0.707 0.022 261.325);
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: oklch(0.707 0.022 261.325);
  --tw-prose-invert-bullets: oklch(0.446 0.03 256.802);
  --tw-prose-invert-hr: oklch(0.373 0.034 259.733);
  --tw-prose-invert-quotes: oklch(0.967 0.003 264.542);
  --tw-prose-invert-quote-borders: oklch(0.373 0.034 259.733);
  --tw-prose-invert-captions: oklch(0.707 0.022 261.325);
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: oklch(0.872 0.01 258.338);
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: oklch(0.446 0.03 256.802);
  --tw-prose-invert-td-borders: oklch(0.373 0.034 259.733);
  font-size: 1rem;
  line-height: 1.75;
}
.prose :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.prose :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose :where(ul ul,ul ol,ol ul,ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}
.prose :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}
.prose :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}
.prose :where(tbody td,tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.prose :where(tbody td:first-child,tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}
.prose :where(tbody td:last-child,tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}
.prose :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 0;
}
.prose :where(blockquote > cite):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-body);
  font-style: normal;
  font-weight: 400;
}
.prose :where(blockquote > cite):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: "\2014";
}
.prose :where(table.has-fixed-layout):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  table-layout: fixed;
  width: 100%;
}
.mt-0 {
  margin-top: calc(var(--spacing) * 0);
}
.mt-2 {
  margin-top: calc(var(--spacing) * 2);
}
.mt-4 {
  margin-top: calc(var(--spacing) * 4);
}
.mt-20 {
  margin-top: calc(var(--spacing) * 20);
}
.mt-\[5vh\] {
  margin-top: 5vh;
}
.mr-4 {
  margin-right: calc(var(--spacing) * 4);
}
.mb-0 {
  margin-bottom: calc(var(--spacing) * 0);
}
.mb-2 {
  margin-bottom: calc(var(--spacing) * 2);
}
.mb-4 {
  margin-bottom: calc(var(--spacing) * 4);
}
.mb-5 {
  margin-bottom: calc(var(--spacing) * 5);
}
.mb-8 {
  margin-bottom: calc(var(--spacing) * 8);
}
.mb-10 {
  margin-bottom: calc(var(--spacing) * 10);
}
.mb-20 {
  margin-bottom: calc(var(--spacing) * 20);
}
.ml-4 {
  margin-left: calc(var(--spacing) * 4);
}
.block {
  display: block;
}
.contents {
  display: contents;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline {
  display: inline;
}
.inline-block {
  display: inline-block;
}
.inline-flex {
  display: inline-flex;
}
.aspect-square {
  aspect-ratio: 1 / 1;
}
.aspect-video {
  aspect-ratio: var(--aspect-video);
}
.h-2\.5 {
  height: calc(var(--spacing) * 2.5);
}
.h-5 {
  height: calc(var(--spacing) * 5);
}
.h-10 {
  height: calc(var(--spacing) * 10);
}
.h-12 {
  height: calc(var(--spacing) * 12);
}
.h-20 {
  height: calc(var(--spacing) * 20);
}
.h-100 {
  height: calc(var(--spacing) * 100);
}
.h-\[30px\] {
  height: 30px;
}
.h-\[100px\] {
  height: 100px;
}
.h-auto {
  height: auto;
}
.h-full {
  height: 100%;
}
.h-screen {
  height: 100vh;
}
.max-h-screen {
  max-height: 100vh;
}
.min-h-\[25px\] {
  min-height: 25px;
}
.min-h-\[50vh\] {
  min-height: 50vh;
}
.min-h-\[75vh\] {
  min-height: 75vh;
}
.min-h-\[85px\] {
  min-height: 85px;
}
.min-h-screen {
  min-height: 100vh;
}
.w-2\.5 {
  width: calc(var(--spacing) * 2.5);
}
.w-3\/4 {
  width: calc(3/4 * 100%);
}
.w-5 {
  width: calc(var(--spacing) * 5);
}
.w-10 {
  width: calc(var(--spacing) * 10);
}
.w-50 {
  width: calc(var(--spacing) * 50);
}
.w-75 {
  width: calc(var(--spacing) * 75);
}
.w-100 {
  width: calc(var(--spacing) * 100);
}
.w-\[30px\] {
  width: 30px;
}
.w-\[35px\] {
  width: 35px;
}
.w-\[50px\] {
  width: 50px;
}
.w-\[65px\] {
  width: 65px;
}
.w-\[100px\] {
  width: 100px;
}
.w-\[150px\] {
  width: 150px;
}
.w-\[300px\] {
  width: 300px;
}
.w-auto {
  width: auto;
}
.w-full {
  width: 100%;
}
.max-w-7xl {
  max-width: var(--container-7xl);
}
.max-w-none {
  max-width: none;
}
.min-w-full {
  min-width: 100%;
}
.translate-x-0 {
  --tw-translate-x: calc(var(--spacing) * 0);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.scale-1 {
  --tw-scale-x: 1%;
  --tw-scale-y: 1%;
  --tw-scale-z: 1%;
  scale: var(--tw-scale-x) var(--tw-scale-y);
}
.scale-\[2\.5\] {
  scale: 2.5;
}
.rotate-0 {
  rotate: 0deg;
}
.transform {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.cursor-pointer {
  cursor: pointer;
}
.list-none {
  list-style-type: none;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}
.grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}
.grid-cols-12 {
  grid-template-columns: repeat(12, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.items-start {
  align-items: flex-start;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.gap-0 {
  gap: calc(var(--spacing) * 0);
}
.gap-1 {
  gap: calc(var(--spacing) * 1);
}
.gap-2 {
  gap: calc(var(--spacing) * 2);
}
.gap-3 {
  gap: calc(var(--spacing) * 3);
}
.gap-4 {
  gap: calc(var(--spacing) * 4);
}
.gap-5 {
  gap: calc(var(--spacing) * 5);
}
.gap-6 {
  gap: calc(var(--spacing) * 6);
}
.gap-20 {
  gap: calc(var(--spacing) * 20);
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.overflow-y-auto {
  overflow-y: auto;
}
.rounded {
  border-radius: 0.25rem;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.rounded-lg {
  border-radius: var(--radius-lg);
}
.rounded-md {
  border-radius: var(--radius-md);
}
.rounded-none {
  border-radius: 0;
}
.rounded-xl {
  border-radius: var(--radius-xl);
}
.rounded-l-3xl {
  border-top-left-radius: var(--radius-3xl);
  border-bottom-left-radius: var(--radius-3xl);
}
.rounded-tl-full {
  border-top-left-radius: calc(infinity * 1px);
}
.rounded-b {
  border-bottom-right-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}
.rounded-bl-full {
  border-bottom-left-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-0 {
  border-style: var(--tw-border-style);
  border-width: 0px;
}
.border-1 {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-3 {
  border-style: var(--tw-border-style);
  border-width: 3px;
}
.border-5 {
  border-style: var(--tw-border-style);
  border-width: 5px;
}
.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
.border-r {
  border-right-style: var(--tw-border-style);
  border-right-width: 1px;
}
.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}
.border-l-0 {
  border-left-style: var(--tw-border-style);
  border-left-width: 0px;
}
.border-blue-500 {
  border-color: var(--color-blue-500);
}
.border-gray-200 {
  border-color: var(--color-gray-200);
}
.border-gray-500 {
  border-color: var(--color-gray-500);
}
.border-green-500 {
  border-color: var(--color-green-500);
}
.border-red-500 {
  border-color: var(--color-red-500);
}
.border-white {
  border-color: var(--color-white);
}
.border-yellow-500 {
  border-color: var(--color-yellow-500);
}
.bg-\[\#00B147\] {
  background-color: #00B147;
}
.bg-\[var\(--azul-arinsa\)\] {
  background-color: var(--azul-arinsa);
}
.bg-black\/35 {
  background-color: color-mix(in oklab, var(--color-black) 35%, transparent);
}
.bg-black\/40 {
  background-color: color-mix(in oklab, var(--color-black) 40%, transparent);
}
.bg-blue-500 {
  background-color: var(--color-blue-500);
}
.bg-gray-100 {
  background-color: var(--color-gray-100);
}
.bg-gray-500 {
  background-color: var(--color-gray-500);
}
.bg-transparent {
  background-color: transparent;
}
.bg-white {
  background-color: var(--color-white);
}
.bg-yellow-500 {
  background-color: var(--color-yellow-500);
}
.bg-gradient-to-b {
  --tw-gradient-position: to bottom in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.from-\[\#171B30\] {
  --tw-gradient-from: #171B30;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.via-\[\#171B30\]\/50 {
  --tw-gradient-via: color-mix(in oklab, #171B30 50%, transparent);
  --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-via-stops);
}
.to-transparent {
  --tw-gradient-to: transparent;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.object-contain {
  object-fit: contain;
}
.object-cover {
  object-fit: cover;
}
.object-right {
  object-position: right;
}
.p-0 {
  padding: calc(var(--spacing) * 0);
}
.p-1 {
  padding: calc(var(--spacing) * 1);
}
.p-2 {
  padding: calc(var(--spacing) * 2);
}
.p-3 {
  padding: calc(var(--spacing) * 3);
}
.p-4 {
  padding: calc(var(--spacing) * 4);
}
.p-5 {
  padding: calc(var(--spacing) * 5);
}
.p-8 {
  padding: calc(var(--spacing) * 8);
}
.px-0 {
  padding-inline: calc(var(--spacing) * 0);
}
.px-1 {
  padding-inline: calc(var(--spacing) * 1);
}
.px-2 {
  padding-inline: calc(var(--spacing) * 2);
}
.px-3 {
  padding-inline: calc(var(--spacing) * 3);
}
.px-4 {
  padding-inline: calc(var(--spacing) * 4);
}
.px-15 {
  padding-inline: calc(var(--spacing) * 15);
}
.py-0 {
  padding-block: calc(var(--spacing) * 0);
}
.py-1 {
  padding-block: calc(var(--spacing) * 1);
}
.py-2 {
  padding-block: calc(var(--spacing) * 2);
}
.py-3 {
  padding-block: calc(var(--spacing) * 3);
}
.py-4 {
  padding-block: calc(var(--spacing) * 4);
}
.py-5 {
  padding-block: calc(var(--spacing) * 5);
}
.py-8 {
  padding-block: calc(var(--spacing) * 8);
}
.py-10 {
  padding-block: calc(var(--spacing) * 10);
}
.py-20 {
  padding-block: calc(var(--spacing) * 20);
}
.ps-1 {
  padding-inline-start: calc(var(--spacing) * 1);
}
.ps-2 {
  padding-inline-start: calc(var(--spacing) * 2);
}
.ps-3 {
  padding-inline-start: calc(var(--spacing) * 3);
}
.pe-1 {
  padding-inline-end: calc(var(--spacing) * 1);
}
.pe-2 {
  padding-inline-end: calc(var(--spacing) * 2);
}
.pt-3 {
  padding-top: calc(var(--spacing) * 3);
}
.pt-4 {
  padding-top: calc(var(--spacing) * 4);
}
.pt-5 {
  padding-top: calc(var(--spacing) * 5);
}
.pt-20 {
  padding-top: calc(var(--spacing) * 20);
}
.pr-1 {
  padding-right: calc(var(--spacing) * 1);
}
.pb-2 {
  padding-bottom: calc(var(--spacing) * 2);
}
.pb-4 {
  padding-bottom: calc(var(--spacing) * 4);
}
.pb-5 {
  padding-bottom: calc(var(--spacing) * 5);
}
.pb-10 {
  padding-bottom: calc(var(--spacing) * 10);
}
.pb-20 {
  padding-bottom: calc(var(--spacing) * 20);
}
.pl-1 {
  padding-left: calc(var(--spacing) * 1);
}
.pl-8 {
  padding-left: calc(var(--spacing) * 8);
}
.text-center {
  text-align: center;
}
.text-justify {
  text-align: justify;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}
.text-2xl {
  font-size: var(--text-2xl);
  line-height: var(--tw-leading, var(--text-2xl--line-height));
}
.text-3xl {
  font-size: var(--text-3xl);
  line-height: var(--tw-leading, var(--text-3xl--line-height));
}
.text-4xl {
  font-size: var(--text-4xl);
  line-height: var(--tw-leading, var(--text-4xl--line-height));
}
.text-5xl {
  font-size: var(--text-5xl);
  line-height: var(--tw-leading, var(--text-5xl--line-height));
}
.text-base {
  font-size: var(--text-base);
  line-height: var(--tw-leading, var(--text-base--line-height));
}
.text-lg {
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
}
.text-sm {
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
}
.text-xl {
  font-size: var(--text-xl);
  line-height: var(--tw-leading, var(--text-xl--line-height));
}
.text-xs {
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
}
.leading-none {
  --tw-leading: 1;
  line-height: 1;
}
.leading-relaxed {
  --tw-leading: var(--leading-relaxed);
  line-height: var(--leading-relaxed);
}
.leading-tight {
  --tw-leading: var(--leading-tight);
  line-height: var(--leading-tight);
}
.font-bold {
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
}
.font-medium {
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
}
.font-normal {
  --tw-font-weight: var(--font-weight-normal);
  font-weight: var(--font-weight-normal);
}
.font-semibold {
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
}
.tracking-wider {
  --tw-tracking: var(--tracking-wider);
  letter-spacing: var(--tracking-wider);
}
.tracking-widest {
  --tw-tracking: var(--tracking-widest);
  letter-spacing: var(--tracking-widest);
}
.break-all {
  word-break: break-all;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.text-\[\#003A70\] {
  color: #003A70;
}
.text-blue-500 {
  color: var(--color-blue-500);
}
.text-gray-200 {
  color: var(--color-gray-200);
}
.text-gray-500 {
  color: var(--color-gray-500);
}
.text-gray-600 {
  color: var(--color-gray-600);
}
.text-green-500 {
  color: var(--color-green-500);
}
.text-red-500 {
  color: var(--color-red-500);
}
.text-white {
  color: var(--color-white);
}
.text-yellow-500 {
  color: var(--color-yellow-500);
}
.uppercase {
  text-transform: uppercase;
}
.underline {
  text-decoration-line: underline;
}
.opacity-25 {
  opacity: 25%;
}
.opacity-100 {
  opacity: 100%;
}
.shadow {
  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-lg {
  --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-sm {
  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.outline {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
}
.grayscale {
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.duration-200 {
  --tw-duration: 200ms;
  transition-duration: 200ms;
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.duration-1000 {
  --tw-duration: 1000ms;
  transition-duration: 1000ms;
}
.ease-in-out {
  --tw-ease: var(--ease-in-out);
  transition-timing-function: var(--ease-in-out);
}
.content-none {
  --tw-content: none;
  content: none;
}
.prose-neutral {
  --tw-prose-body: oklch(0.371 0 0);
  --tw-prose-headings: oklch(0.205 0 0);
  --tw-prose-lead: oklch(0.439 0 0);
  --tw-prose-links: oklch(0.205 0 0);
  --tw-prose-bold: oklch(0.205 0 0);
  --tw-prose-counters: oklch(0.556 0 0);
  --tw-prose-bullets: oklch(0.87 0 0);
  --tw-prose-hr: oklch(0.922 0 0);
  --tw-prose-quotes: oklch(0.205 0 0);
  --tw-prose-quote-borders: oklch(0.922 0 0);
  --tw-prose-captions: oklch(0.556 0 0);
  --tw-prose-kbd: oklch(0.205 0 0);
  --tw-prose-kbd-shadows: NaN NaN NaN;
  --tw-prose-code: oklch(0.205 0 0);
  --tw-prose-pre-code: oklch(0.922 0 0);
  --tw-prose-pre-bg: oklch(0.269 0 0);
  --tw-prose-th-borders: oklch(0.87 0 0);
  --tw-prose-td-borders: oklch(0.922 0 0);
  --tw-prose-invert-body: oklch(0.87 0 0);
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: oklch(0.708 0 0);
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: oklch(0.708 0 0);
  --tw-prose-invert-bullets: oklch(0.439 0 0);
  --tw-prose-invert-hr: oklch(0.371 0 0);
  --tw-prose-invert-quotes: oklch(0.97 0 0);
  --tw-prose-invert-quote-borders: oklch(0.371 0 0);
  --tw-prose-invert-captions: oklch(0.708 0 0);
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: oklch(0.87 0 0);
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: oklch(0.439 0 0);
  --tw-prose-invert-td-borders: oklch(0.371 0 0);
}
.select-none {
  -webkit-user-select: none;
  user-select: none;
}
@media (hover: hover) {
  .hover\:translate-x-\[-150px\]:hover {
    --tw-translate-x: -150px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
@media (hover: hover) {
  .hover\:scale-102:hover {
    --tw-scale-x: 102%;
    --tw-scale-y: 102%;
    --tw-scale-z: 102%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
}
@media (hover: hover) {
  .hover\:rotate-\[-360deg\]:hover {
    rotate: -360deg;
  }
}
@media (hover: hover) {
  .hover\:bg-\[\#008B21\]:hover {
    background-color: #008B21;
  }
}
@media (hover: hover) {
  .hover\:bg-black\/40:hover {
    background-color: color-mix(in oklab, var(--color-black) 40%, transparent);
  }
}
@media (hover: hover) {
  .hover\:bg-transparent:hover {
    background-color: transparent;
  }
}
@media (hover: hover) {
  .hover\:bg-white:hover {
    background-color: var(--color-white);
  }
}
@media (hover: hover) {
  .hover\:bg-white\/99:hover {
    background-color: color-mix(in oklab, var(--color-white) 99%, transparent);
  }
}
@media (hover: hover) {
  .hover\:bg-yellow-600:hover {
    background-color: var(--color-yellow-600);
  }
}
@media (hover: hover) {
  .hover\:text-\[\#00B147\]:hover {
    color: #00B147;
  }
}
@media (hover: hover) {
  .hover\:text-blue-500:hover {
    color: var(--color-blue-500);
  }
}
@media (hover: hover) {
  .hover\:text-gray-200:hover {
    color: var(--color-gray-200);
  }
}
@media (hover: hover) {
  .hover\:text-yellow-500:hover {
    color: var(--color-yellow-500);
  }
}
@media (hover: hover) {
  .hover\:text-yellow-600:hover {
    color: var(--color-yellow-600);
  }
}
@media (hover: hover) {
  .hover\:shadow-lg:hover {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-2:focus {
  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.focus\:ring-gray-200:focus {
  --tw-ring-color: var(--color-gray-200);
}
.focus\:outline-none:focus {
  --tw-outline-style: none;
  outline-style: none;
}
@media (width >= 48rem) {
  .md\:absolute {
    position: absolute;
  }
}
@media (width >= 48rem) {
  .md\:relative {
    position: relative;
  }
}
@media (width >= 48rem) {
  .md\:top-auto {
    top: auto;
  }
}
@media (width >= 48rem) {
  .md\:right-0 {
    right: calc(var(--spacing) * 0);
  }
}
@media (width >= 48rem) {
  .md\:right-auto {
    right: auto;
  }
}
@media (width >= 48rem) {
  .md\:bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
}
@media (width >= 48rem) {
  .md\:left-auto {
    left: auto;
  }
}
@media (width >= 48rem) {
  .md\:m-0 {
    margin: calc(var(--spacing) * 0);
  }
}
@media (width >= 48rem) {
  .md\:mt-0 {
    margin-top: calc(var(--spacing) * 0);
  }
}
@media (width >= 48rem) {
  .md\:mr-4 {
    margin-right: calc(var(--spacing) * 4);
  }
}
@media (width >= 48rem) {
  .md\:mb-0 {
    margin-bottom: calc(var(--spacing) * 0);
  }
}
@media (width >= 48rem) {
  .md\:mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
}
@media (width >= 48rem) {
  .md\:block {
    display: block;
  }
}
@media (width >= 48rem) {
  .md\:flex {
    display: flex;
  }
}
@media (width >= 48rem) {
  .md\:grid {
    display: grid;
  }
}
@media (width >= 48rem) {
  .md\:hidden {
    display: none;
  }
}
@media (width >= 48rem) {
  .md\:h-auto {
    height: auto;
  }
}
@media (width >= 48rem) {
  .md\:w-2\/3 {
    width: calc(2/3 * 100%);
  }
}
@media (width >= 48rem) {
  .md\:w-3\/4 {
    width: calc(3/4 * 100%);
  }
}
@media (width >= 48rem) {
  .md\:w-4\/12 {
    width: calc(4/12 * 100%);
  }
}
@media (width >= 48rem) {
  .md\:w-8\/12 {
    width: calc(8/12 * 100%);
  }
}
@media (width >= 48rem) {
  .md\:w-auto {
    width: auto;
  }
}
@media (width >= 48rem) {
  .md\:w-full {
    width: 100%;
  }
}
@media (width >= 48rem) {
  .md\:min-w-\[400px\] {
    min-width: 400px;
  }
}
@media (width >= 48rem) {
  .md\:scale-\[3\] {
    scale: 3;
  }
}
@media (width >= 48rem) {
  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}
@media (width >= 48rem) {
  .md\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}
@media (width >= 48rem) {
  .md\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
}
@media (width >= 48rem) {
  .md\:grid-cols-\[25\%_30\%_20\%_25\%\] {
    grid-template-columns: 25% 30% 20% 25%;
  }
}
@media (width >= 48rem) {
  .md\:grid-cols-\[70\%_30\%\] {
    grid-template-columns: 70% 30%;
  }
}
@media (width >= 48rem) {
  .md\:flex-row {
    flex-direction: row;
  }
}
@media (width >= 48rem) {
  .md\:items-center {
    align-items: center;
  }
}
@media (width >= 48rem) {
  .md\:justify-center {
    justify-content: center;
  }
}
@media (width >= 48rem) {
  .md\:justify-start {
    justify-content: flex-start;
  }
}
@media (width >= 48rem) {
  .md\:gap-0 {
    gap: calc(var(--spacing) * 0);
  }
}
@media (width >= 48rem) {
  .md\:gap-4 {
    gap: calc(var(--spacing) * 4);
  }
}
@media (width >= 48rem) {
  .md\:border-0 {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
}
@media (width >= 48rem) {
  .md\:border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
}
@media (width >= 48rem) {
  .md\:bg-transparent {
    background-color: transparent;
  }
}
@media (width >= 48rem) {
  .md\:p-0 {
    padding: calc(var(--spacing) * 0);
  }
}
@media (width >= 48rem) {
  .md\:px-0 {
    padding-inline: calc(var(--spacing) * 0);
  }
}
@media (width >= 48rem) {
  .md\:px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
}
@media (width >= 48rem) {
  .md\:px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
}
@media (width >= 48rem) {
  .md\:py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
}
@media (width >= 48rem) {
  .md\:pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }
}
@media (width >= 48rem) {
  .md\:pl-0 {
    padding-left: calc(var(--spacing) * 0);
  }
}
@media (width >= 48rem) {
  .md\:text-center {
    text-align: center;
  }
}
@media (width >= 48rem) {
  .md\:text-left {
    text-align: left;
  }
}
@media (width >= 48rem) {
  .md\:text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
}
@media (width >= 48rem) {
  .md\:text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
}
@media (width >= 48rem) {
  .md\:text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
}
@media (width >= 48rem) {
  .md\:text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
}
@media (width >= 48rem) {
  .md\:text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
}
@media (width >= 48rem) {
  .md\:break-normal {
    overflow-wrap: normal;
    word-break: normal;
  }
}
@media (prefers-color-scheme: dark) {
  .dark\:bg-gray-900 {
    background-color: var(--color-gray-900);
  }
}
.prose-a\:text-primary :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  color: var(--color-primary);
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
